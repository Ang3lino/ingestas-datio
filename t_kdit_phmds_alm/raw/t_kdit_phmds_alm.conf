kirby {
    input {
        options {
            delimiter="|"
            header=true
            mode=FAILFAST
        }
        paths=[
            "/in/staging/ratransmit/host/kdit/fds/phmds.csv"
        ]
        schema {
            path=${ARTIFACTORY_UNIQUE_CACHE}"/artifactory/"${SCHEMAS_REPOSITORY}"/schemas/mx/kdit/raw/t_kdit_phmds_alm/latest/t_kdit_phmds_alm.input.schema"
        }
        type=csv
    }
    output {
        coalesce {
            partitions=1
        }
        force=true
        mode=overwrite
        options {}
        partition=[
            "business_day_id"
        ]
        path="/data/raw/kdit/data/t_kdit_phmds_alm"
        schema {
            path=${ARTIFACTORY_UNIQUE_CACHE}"/artifactory/"${SCHEMAS_REPOSITORY}"/schemas/mx/kdit/raw/t_kdit_phmds_alm/latest/t_kdit_phmds_alm.output.schema"
        }
        type=avro
    }
    transformations=[
        {  # casts for string matching
            default=""  # default = "value" is a weak solution
            defaultType=string
            field="load_process_id"
            type=literal
        },
        {
            default=""
            defaultType=string
            field="audit_date"
            type=literal
        },
        {  # generated field
             type : "regexcasecolumn"
             field: "load_process_id"
             default: "value"  # useless when overwriting
             regexList: [
               {
                 columnToRegex: "load_process_id"
                 pattern: ""
                 value: "value"
               }
             ]
        },
        {  # generated field
          type : "setCurrentDate"
          field : "audit_date"
        },
        {  # fix audit_date cast
          type : "autocast"
          fromType: "timestamp"
          toType: "string"
        },
        {  # replace o|O -> 0, l|L -> 1
           type : "regexcasecolumn"
           field: "load_dt_date"
           default: "basic"  # not used when overwriting
           regexList: [
             {
               columnToRegex: "load_dt_date"
               pattern: "l|L"
               value: "1"
             },
             {
               columnToRegex: "load_dt_date"
               pattern: "o|O"
               value: "0"
             },
           ]
        },
        {  # change MM/dd/yyyy HH:mm:ss -> yyyy-MM-dd
          field = "load_dt_date"
          type = "dateformatter"
          format = "MM/dd/yyyy HH:mm:ss"
          reformat = "yyyy-MM-dd"
          operation = "reformat"
        },
    ]
}
